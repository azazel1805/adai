/* --- Base & Variables --- */
:root {
    --bg-color: #f8f8f0; /* Sophisticated off-white */
    --primary-yellow: #FFD700; /* Gold-ish Yellow */
    --light-yellow: #FFFACD; /* Lemon Chiffon - for highlights */
    --accent-red: #DC143C; /* Crimson Red */
    --text-color: #333333;
    --border-color: #dddddd;
    --button-bg: #ffffff;
    --button-hover-bg: #f0f0f0;
    --shadow-light: rgba(0, 0, 0, 0.08);
    --shadow-medium: rgba(0, 0, 0, 0.12);
    --font-main: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Example modern font */
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: var(--font-main);
    background-color: var(--bg-color);
    color: var(--text-color);
    line-height: 1.6;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

/* --- Header --- */
header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 30px;
    background-color: #ffffff;
    box-shadow: 0 2px 5px var(--shadow-light);
    border-bottom: 1px solid var(--border-color);
}

.logo {
    font-size: 2em;
    font-weight: bold;
    color: var(--text-color);
}

.logo .adai-i {
    color: var(--primary-yellow);
    text-shadow: 0 0 5px var(--primary-yellow), 0 0 8px #FFA500; /* Glow effect */
    animation: pulse-glow 2s infinite alternate;
}

@keyframes pulse-glow {
    from { text-shadow: 0 0 5px var(--primary-yellow), 0 0 8px #FFA500; }
    to { text-shadow: 0 0 10px var(--primary-yellow), 0 0 15px #FFA500, 0 0 20px var(--primary-yellow); }
}

.user-info {
    display: flex;
    align-items: center;
    gap: 15px;
}

#user-email {
    font-size: 0.9em;
    color: #555;
}

#sign-out-button {
    padding: 8px 15px;
    background-color: var(--accent-red);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

#sign-out-button:hover {
    background-color: darken(var(--accent-red), 10%);
}

/* --- Main Content & Navigation --- */
main {
    flex-grow: 1;
    padding: 20px 30px;
    display: flex; /* Use flex for sidebar/content layout if needed, or just flow */
    flex-direction: column; /* Default: nav on top */
}

.feature-nav {
    display: flex;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
    gap: 10px;
    margin-bottom: 25px;
    padding-bottom: 15px;
    border-bottom: 1px solid var(--border-color);
}

.feature-button {
    padding: 12px 20px;
    font-size: 1em;
    background-color: var(--button-bg);
    color: var(--text-color);
    border: 1px solid var(--border-color);
    border-radius: 25px; /* Rounded pill shape */
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px var(--shadow-light);
    display: inline-flex;
    align-items: center;
    gap: 8px;
}

.feature-button i {
    color: var(--primary-yellow); /* Icon color */
}


.feature-button:hover,
.feature-button.active {
    background-color: var(--primary-yellow);
    color: #333; /* Darker text on yellow */
    border-color: darken(var(--primary-yellow), 10%);
    box-shadow: 0 4px 8px var(--shadow-medium);
    transform: translateY(-2px);
}

.feature-button.active i,
.feature-button:hover i {
    color: #333; /* Change icon color on hover/active */
}


/* --- Feature Display Area --- */
.feature-display {
    background-color: #ffffff;
    padding: 25px;
    border-radius: 8px;
    box-shadow: 0 3px 10px var(--shadow-light);
    min-height: 400px; /* Ensure it has some height */
}

.feature-content {
    display: none; /* Hide all features by default */
    animation: fadeIn 0.5s ease-in-out;
}

.feature-content.active {
    display: block; /* Show only the active one */
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

.feature-content h2 {
    color: var(--text-color);
    margin-bottom: 20px;
    border-bottom: 2px solid var(--primary-yellow);
    padding-bottom: 5px;
    display: inline-block; /* So border only underlines text */
}

.feature-content h2 i {
    margin-right: 8px;
    color: var(--primary-yellow);
}

.feature-content h3 {
    margin-top: 20px;
    margin-bottom: 10px;
    color: #444;
}


/* --- Controls & Inputs --- */
.controls {
    margin-bottom: 20px;
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    align-items: center;
}

.controls label {
    font-weight: bold;
    margin-right: 5px;
}

.controls input[type="text"],
.controls select,
.controls textarea {
    padding: 10px;
    border: 1px solid var(--border-color);
    border-radius: 5px;
    font-size: 1em;
    flex-grow: 1; /* Allow inputs to take available space */
    min-width: 150px; /* Prevent inputs from becoming too small */
}

.controls textarea {
    width: 100%; /* Make textareas take full width in their flex container */
    resize: vertical; /* Allow vertical resize */
    min-height: 80px;
}

.control-button {
    padding: 10px 18px;
    font-size: 0.95em;
    background-color: var(--accent-red);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.1s ease;
    display: inline-flex;
    align-items: center;
    gap: 6px;
}

.control-button:hover {
    background-color: darken(var(--accent-red), 10%);
}
.control-button:active {
    transform: scale(0.98);
}
.control-button i {
    font-size: 1.1em;
}

/* --- Output Boxes --- */
.output-box {
    background-color: var(--light-yellow);
    border: 1px dashed var(--primary-yellow);
    border-radius: 5px;
    padding: 15px;
    margin-top: 15px;
    min-height: 100px;
    white-space: pre-wrap; /* Preserve formatting from AI */
    overflow-x: auto; /* Add scrollbars if content overflows */
    position: relative; /* For loading indicator */
}

/* Loading Indicator inside output boxes */
.loading-indicator::after {
    content: 'Loading...';
    position: absolute;
    top: 15px;
    left: 15px;
    font-style: italic;
    color: #888;
    display: none; /* Hidden by default */
}
.output-box.loading::after {
    display: block; /* Show when loading class is added */
}
.output-box.loading > *:not(h3) { /* Hide content while loading, keep headers */
    opacity: 0.3;
}

/* Specific Output Areas */
#corrected-text-display, #feedback-display {
    background-color: #fff; /* White background inside the yellow box */
    padding: 10px;
    border-radius: 3px;
    margin-top: 5px;
    border: 1px solid #eee;
}


/* --- Chatbot Specific Styles --- */
.chat-container {
    display: flex;
    flex-direction: column;
    height: 500px; /* Adjust height as needed */
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden; /* Clip children */
}

#chat-box {
    flex-grow: 1;
    overflow-y: auto;
    padding: 15px;
    background-color: #fff;
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.message {
    padding: 10px 15px;
    border-radius: 15px;
    max-width: 75%;
    word-wrap: break-word; /* Break long words */
}

.message.user {
    background-color: var(--primary-yellow);
    color: #333;
    border-bottom-right-radius: 3px;
    align-self: flex-end; /* Align user messages to the right */
}

.message.bot {
    background-color: #e5e5ea; /* Light grey for bot */
    color: var(--text-color);
    border-bottom-left-radius: 3px;
    align-self: flex-start; /* Align bot messages to the left */
}

.chat-input-area {
    display: flex;
    padding: 10px;
    border-top: 1px solid var(--border-color);
    background-color: #f9f9f9;
    align-items: center; /* Align items vertically */
    gap: 10px;
}

#chat-input {
    flex-grow: 1;
    border: 1px solid var(--border-color);
    border-radius: 15px;
    padding: 10px 100px;
    resize: none; /* Disable manual resize */
    font-size: 1em;
    max-height: 80px; /* Limit input height */
    overflow-y: auto; /* Allow scrolling if needed */
}

#send-chat-button, #speak-mode-button {
    flex-shrink: 0; /* Prevent buttons from shrinking */
    height: 40px; /* Match input height roughly */
    width: 50px;
    font-size: 1.2em;
}
#speak-mode-button.active {
    background-color: var(--accent-red);
    color: white;
    box-shadow: 0 0 10px var(--accent-red);
}
.speech-status-indicator {
    font-size: 0.8em;
    color: #666;
    font-style: italic;
    min-width: 60px; /* Reserve space */
    text-align: center;
}


/* --- Dictionary Specific --- */
#dict-output strong { /* Highlight labels */
    color: var(--accent-red);
    display: block; /* Put labels on new lines */
    margin-top: 8px;
}
#dict-output button.speak-word-button {
    background: none;
    border: none;
    color: var(--accent-red);
    font-size: 1.3em;
    cursor: pointer;
    margin-left: 10px;
    vertical-align: middle;
}
#dict-output button.speak-word-button:hover {
    color: darken(var(--accent-red), 15%);
}


/* --- Loading Overlay --- */
#loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.7); /* Semi-transparent white */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Ensure it's on top */
}

.spinner {
    border: 5px solid var(--light-yellow); /* Light grey */
    border-top: 5px solid var(--primary-yellow); /* Blue */
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
    margin-bottom: 15px;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

#loading-overlay p {
    font-weight: bold;
    color: var(--text-color);
}


/* --- Responsive --- */
@media (max-width: 768px) {
    header {
        flex-direction: column;
        gap: 10px;
        padding: 15px;
    }
    .user-info {
        width: 100%;
        justify-content: space-between;
    }
    main {
        padding: 15px;
    }
    .feature-nav {
        justify-content: center;
    }
    .feature-button {
        font-size: 0.9em;
        padding: 10px 15px;
    }
    .controls {
        flex-direction: column;
        align-items: stretch; /* Make controls take full width */
    }
    .controls input[type="text"],
    .controls select,
    .controls button {
        width: 100%; /* Full width on small screens */
    }
    .chat-container {
        height: 400px; /* Adjust for smaller screens */
    }

    /* --- Added Styles for Chat Controls --- */

/* Style for TTS Toggle Button when muted */
#toggle-tts-button.muted i {
    opacity: 0.5; /* Make the icon slightly faded when muted */
}

/* Style for STT Speak Button when actively listening */
#speak-mode-button.listening {
    background-color: var(--accent-red); /* Use accent red for active listening */
    color: white;
    box-shadow: 0 0 8px var(--accent-red); /* Optional glow effect */
}
/* Ensure icon inside listening button is visible */
#speak-mode-button.listening i {
    color: white;
}

/* Style for Auth Loading Hiding */
/* Initially hide main content areas until auth state is known */
body.auth-loading > header > .user-info,
body.auth-loading > main {
     visibility: hidden;
     opacity: 0;
     transition: none; /* Prevent transition during initial hide */
}
/* Ensure loading overlay is visible during auth loading */
body.auth-loading > #loading-overlay {
    visibility: visible;
    opacity: 1;
}
}
